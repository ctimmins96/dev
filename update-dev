#!/usr/bin/env bash
dry_run="0"

if [ -z "$XDG_CONFIG_HOME" ]; then
    echo "no xdg config home"
    echo "using ~/.config"
    XDG_CONFIG_HOME=$HOME/.config
fi

if [ -z "$DEV_ENV" ]; then
    echo "env var DEV_ENV needs to be present. Represents DEVelopment ENVironment."
    exit 1
fi

# Check for -d or --dry
if [[ $# -gt 0 ]]; then
    if [[ $1 == "--dry" ]] || [[ $1 == "-d" ]]; then
        dry_run="1"
    fi
fi

log()
{
    if [[ $dry_run == "1" ]]; then
        echo "[DRY_RUN]: $1"
    else
        echo "$1"
    fi
}

log "env: $DEV_ENV"

update_files()
{
    log "Copying files over from: $1"
    pushd $1 &> /dev/null
    {
        configs=`find . -mindepth 1 -maxdepth 1 -type d`
        for c in $configs; do
            directory=${2%/}/${c#./}
            log "    removing: rm -rf $directory"
            if [[ $dry_run == "0" ]]; then
                rm -rf $directory
            fi
            log "    copying: cp $c $2"
            if [[ $dry_run == "0" ]]; then
                cp -r ./$c $2
            fi
        done
    }
    popd &> /dev/null
}

copy()
{
    log "removing: $2"
    if [[ $dry_run == "0" ]]; then
        rm $2
    fi
    log "copying: $1 to $2"
    if [[ $dry_run == "0" ]]; then
        cp $1 $2
    fi
}

update_files $DEV_ENV/env/.config $XDG_CONFIG_HOME
update_files $DEV_ENV/env/.local $HOME/.local

copy $DEV_ENV/update-dev $HOME/.local/scripts/update-dev
copy $DEV_ENV/bash/.bashrc $HOME/.bashrc

hyprctl reload
refenv
